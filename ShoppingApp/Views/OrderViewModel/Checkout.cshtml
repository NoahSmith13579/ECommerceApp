@model ShoppingApp.ViewModels.OrderViewModel

@{
    ViewData["Title"] = "Checkout";
}
<form asp-action="Checkout">
    @if (Model.Addresses.Any())
    {
        @foreach(var address in Model.Addresses)
        {
        <div class="card">
            <div class="card-header bg-primary text-white">
                Address
            </div>
            <div class="card-body">
                <div>
                    <span> @Html.DisplayNameFor(modelItem => address.Street): </span>
                    <span>@Html.DisplayFor(modelItem => address.Street)</span>
                </div>
                <div>
                    <span> @Html.DisplayNameFor(modelItem => address.Street2): </span>
                    <span>@Html.DisplayFor(modelItem => address.Street2)</span>
                </div>
                <div>
                    <span> @Html.DisplayNameFor(modelItem => address.City): </span>
                    <span>@Html.DisplayFor(modelItem => address.City)</span>
                </div>
                <div>
                    <span> @Html.DisplayNameFor(modelItem => address.Country): </span>
                    <span>@Html.DisplayFor(modelItem => address.Country)</span>
                </div>
                <div>
                    <span> @Html.DisplayNameFor(modelItem => address.ZipCode): </span>
                    <span>@Html.DisplayFor(modelItem => address.ZipCode)</span>
                </div>
            </div>
            <div class="card-footer  align-items-center">
                <a
                    asp-action="Edit"
                    asp-controller="Address"
                    asp-route-addressId="@address.Id"
                    class="btn btn-outline-info"
                >
                    Edit
                </a>
                <span class="mx-1">
                    Use this address:
                </span>
                <input class="" type="radio" asp-for="AddressId" value="@address.Id" name="AddressId"/>
                
            </div>
        </div>
        }
        <span>
            Add another address?
        </span>
        <a 
            asp-action="Create" 
            asp-controller="Address" 
            asp-route-userId="@ViewBag.UserId"
            class="btn btn-outline-info"
        >
            Create
        </a>
    }
    else
    {
        <div>
            <span>You account does not have an address.</span>
            <span>Add one to place an order.</span>
            <a class="btn btn-primary" asp-action="Create" asp-controller="Address" asp-route-userId="@ViewBag.UserId">Create New Address</a>
        </div>
      
    }
    <span asp-validation-for="AddressId" class="text-danger"></span>
    <br />
    <div class="m-1">
        Items in cart:
    </div>
    <container class="checkout-container">
        @foreach(var cartItem in Model.CartItems)
        {
            <div class="card checkout-product-card">
                <div class="card-header bg-primary text-white">
                    <span>
                        @Html.DisplayFor(modelItem => cartItem.Product.Name)
                    </span>
                </div>
                <img 
                src="@Html.DisplayFor(modelItem=> cartItem.ImgUrl)" 
                class="card-img"
                >
                <div class="card-body">

                </div>
                <div class="card-footer d-flex align-items-center prod-footer">
                    <span class="prod-footer-child">
                        $@Html.DisplayFor(modelItem => cartItem.Product.Price)
                    </span>
                    <div class="ml-auto">
                        <a  asp-area="" asp-controller="OrderViewModel"
                        asp-action="IncreaseItem" 
                        asp-route-cartItemId="@cartItem.CartItemId"
                        class="m-1 no-tdl btn p-1 btn-outline-primary prod-footer-child"
                        >
                        +1
                        </a>
                        <a asp-area="" asp-controller="OrderViewModel"
                        asp-action="DecreaseItem" 
                        asp-route-cartItemId="@cartItem.CartItemId"
                        class="m-1 no-tdl btn p-1 btn-outline-danger prod-footer-child">
                        -1
                        </a>
                        <a asp-area="" asp-controller="OrderViewModel"
                        asp-action="RemoveItem" 
                        asp-route-cartItemId="@cartItem.CartItemId"
                        class="m-1 no-tdl btn p-1 btn-danger prod-footer-child">
                        Remove all
                        </a>
                        <span class="prod-footer-child">
                            (@Html.DisplayFor(modelItem => cartItem.Quantity))
                        </span>
                    </div>
                </div>
            </div>
        }
    </container>
 
    @if(@ViewBag.TotalPrice != 0)
    {
        <div class="form-group">
            <label>
                Total Price: $
                <span>@ViewBag.TotalPrice</span>
            </label>
            <input type="submit" value="Continue" class="btn btn-primary"/>
        </div>
        }
        else
        {
            <div class="m-2">
                None
            </div>
        <div class="d-flex flex-column m-1">
            <span>
                You have no items in your cart. Start shopping to start ordering!
            </span>
            <div class="my-2">
                <a asp-action="Index" asp-controller="ProductViewModel" 
                class="btn btn-primary">Go to Products page</a>
            </div>
        </div>
    }
</form>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.3/jquery.validate.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validation-unobtrusive/3.2.12/jquery.validate.unobtrusive.js"></script>